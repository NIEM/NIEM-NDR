#!/usr/bin/env bash

#HELP:COMMAND_NAME: Get a list of conformance target URIs for an XML file
#HELP:Usage: COMMAND_NAME option* $file.xml
#HELP:Options:
#HELP:  --help | -h: print this help
#HELP:  --verbose | -v: print debugging and status output

. "$(dirname "$0")"/../lib/common.bash
. "$NDR_TOOLS_ROOT_DIR"/lib/fn_opt_help.bash
. "$NDR_TOOLS_ROOT_DIR"/lib/fn_opt_verbose.bash
. "$NDR_TOOLS_ROOT_DIR"/lib/fn_fail.bash
. "$NDR_TOOLS_ROOT_DIR"/lib/fn_ensure.bash

GET_CONFORMANCE_TARGET_URIS_XSL=$NDR_TOOLS_ROOT_DIR/lib/get-conformance-target-uris.xsl
ensure_file_exists "$GET_CONFORMANCE_TARGET_URIS_XSL"

OPTIND=1
while getopts :hv-: OPTION
do
    case "$OPTION" in
        h ) opt_help;;
        v ) opt_verbose;;
        - )
            case "$OPTARG" in
                help ) opt_help;;
                verbose ) opt_verbose;;
                help=* | verbose=* ) fail "No argument expected for long option \"${OPTARG%%=*}\"";;
                *=* ) fail "Unexpected long option (with argument) \"${OPTARG%%=*}\"";;
                * ) fail "Unexpected long option \"$OPTARG\"";;
            esac;;
        '?' ) fail "Unknown short option \"$OPTARG\"";;
        : ) fail "Short option \"$OPTARG\" missing argument";;
        * ) fail "bad state OPTARG=\"$OPTARG\"";;
    esac
done
shift $((OPTIND-1))

ensure "Need one argument" test $# = 1
ensure_file_exists "$1"

"$NDR_TOOLS_ROOT_DIR/bin/xalan" -- -XSL "$GET_CONFORMANCE_TARGET_URIS_XSL" -IN "$1"


